package hibernate.pojos;
// Generated Mar 22, 2017 6:14:24 PM by Hibernate Tools 4.3.1


import hibernate.HibernateUtil;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;

/**
 * EmpLeaveInfo generated by hbm2java
 */
@Entity
@Table(name="emp_leave_info"
    ,catalog="faculty_portal"
)
public class EmpLeaveInfo  implements java.io.Serializable {


     private int userId;
     private float sltaken;
     private float cltaken;
     private float dltaken;
     private float pltaken;
     private Float mltaken;

    public EmpLeaveInfo() {
    }

	
    public EmpLeaveInfo(int userId, float sltaken, float cltaken, float dltaken, float pltaken) {
        this.userId = userId;
        this.sltaken = sltaken;
        this.cltaken = cltaken;
        this.dltaken = dltaken;
        this.pltaken = pltaken;
    }
    public EmpLeaveInfo(int userId, float sltaken, float cltaken, float dltaken, float pltaken, Float mltaken) {
       this.userId = userId;
       this.sltaken = sltaken;
       this.cltaken = cltaken;
       this.dltaken = dltaken;
       this.pltaken = pltaken;
       this.mltaken = mltaken;
    }
   
     @Id 

    
    @Column(name="UserID", unique=true, nullable=false)
    public int getUserId() {
        return this.userId;
    }
    
    public void setUserId(int userId) {
        this.userId = userId;
    }

    
    @Column(name="SLTaken", nullable=false, precision=12, scale=0)
    public float getSltaken() {
        return this.sltaken;
    }
    
    public void setSltaken(float sltaken) {
        this.sltaken = sltaken;
    }

    
    @Column(name="CLTaken", nullable=false, precision=12, scale=0)
    public float getCltaken() {
        return this.cltaken;
    }
    
    public void setCltaken(float cltaken) {
        this.cltaken = cltaken;
    }

    
    @Column(name="DLTaken", nullable=false, precision=12, scale=0)
    public float getDltaken() {
        return this.dltaken;
    }
    
    public void setDltaken(float dltaken) {
        this.dltaken = dltaken;
    }

    
    @Column(name="PLTaken", nullable=false, precision=12, scale=0)
    public float getPltaken() {
        return this.pltaken;
    }
    
    public void setPltaken(float pltaken) {
        this.pltaken = pltaken;
    }

    
    @Column(name="MLTaken", precision=12, scale=0)
    public Float getMltaken() {
        return this.mltaken;
    }
    
    public void setMltaken(Float mltaken) {
        this.mltaken = mltaken;
    }



    public float getSlAvailable() {
        Session session=HibernateUtil.getSessionFactory().openSession();
         Criteria cr = session.createCriteria(LeaveInfo.class);
         cr.add(Restrictions.eq("leaveShortName","SL"));
         List<LeaveInfo> list=cr.list();
         if(list!=null){
             float a = list.get(0).getAllowed()-this.sltaken;
             if(a<0){
                 return 0;
             }
             else{
                 return a;
             }
         }
         else{
             return 0;
         }
    }
    
    public float getClAvailable() {
        Session session=HibernateUtil.getSessionFactory().openSession();
         Criteria cr = session.createCriteria(LeaveInfo.class);
         cr.add(Restrictions.eq("leaveShortName","CL"));
         List<LeaveInfo> list=cr.list();
         if(list!=null){
             float a = list.get(0).getAllowed()-this.cltaken;
             if(a<0){
                 return 0;
             }
             else{
                 return a;
             }
         }
         else{
             return 0;
         }
    }
    
    public float getDlAvailable() {
        /*Session session=HibernateUtil.getSessionFactory().openSession();
         Criteria cr = session.createCriteria(LeaveInfo.class);
         cr.add(Restrictions.eq("leaveShortName","DL"));
         List<LeaveInfo> list=cr.list();
         if(list!=null){
             return list.get(0).getAllowed()-this.dltaken;
         }
         else{
             return 0;
         }*/
        return 200;
    }
    
    public float getPlAvailable() {
        Session session=HibernateUtil.getSessionFactory().openSession();
         Criteria cr = session.createCriteria(LeaveInfo.class);
         cr.add(Restrictions.eq("leaveShortName","PL"));
         List<LeaveInfo> list=cr.list();
         if(list!=null){
             float a = list.get(0).getAllowed()-this.pltaken;
             if(a<0){
                 return 0;
             }
             else{
                 return a;
             }
         }
         else{
             return 0;
         }
    }
    
    public float getMlAvailable() {
        Session session=HibernateUtil.getSessionFactory().openSession();
         Criteria cr = session.createCriteria(LeaveInfo.class);
         cr.add(Restrictions.eq("leaveShortName","ML"));
         List<LeaveInfo> list=cr.list();
         if(list!=null){
             float a = list.get(0).getAllowed()-this.mltaken;
             if(a<0){
                 return 0;
             }
             else{
                 return a;
             }
         }
         else{
             return 0;
         }
    }

}


