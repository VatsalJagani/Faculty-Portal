package hibernate.pojos;
// Generated Mar 22, 2017 6:14:24 PM by Hibernate Tools 4.3.1


import hibernate.HibernateUtil;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;

/**
 * EmpLeaveRequest generated by hbm2java
 */
@Entity
@Table(name="emp_leave_request"
    ,catalog="faculty_portal"
)
public class EmpLeaveRequest  implements java.io.Serializable {


     private Integer empLeaveId;
     private int userId;
     private int leaveType;
     private Date applyDate;
     private Date startDate;
     private Date endDate;
     private Date approveDate;
     private float noOfDays;
     private String reason;
     private String addressDuringLeave;
     private String remark;
     private String hodRemark;
     private String status;

    public EmpLeaveRequest() {
    }

	
    public EmpLeaveRequest(int userId, int leaveType, Date applyDate, Date startDate, Date endDate, float noOfDays, String reason, String addressDuringLeave, String status) {
        this.userId = userId;
        this.leaveType = leaveType;
        this.applyDate = applyDate;
        this.startDate = startDate;
        this.endDate = endDate;
        this.noOfDays = noOfDays;
        this.reason = reason;
        this.addressDuringLeave = addressDuringLeave;
        this.status = status;
    }
    public EmpLeaveRequest(int userId, int leaveType, Date applyDate, Date startDate, Date endDate, Date approveDate, float noOfDays, String reason, String addressDuringLeave, String remark, String hodRemark, String status) {
       this.userId = userId;
       this.leaveType = leaveType;
       this.applyDate = applyDate;
       this.startDate = startDate;
       this.endDate = endDate;
       this.approveDate = approveDate;
       this.noOfDays = noOfDays;
       this.reason = reason;
       this.addressDuringLeave = addressDuringLeave;
       this.remark = remark;
       this.hodRemark = hodRemark;
       this.status = status;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="EmpLeaveID", unique=true, nullable=false)
    public Integer getEmpLeaveId() {
        return this.empLeaveId;
    }
    
    public void setEmpLeaveId(Integer empLeaveId) {
        this.empLeaveId = empLeaveId;
    }

    
    @Column(name="UserID", nullable=false)
    public int getUserId() {
        return this.userId;
    }
    
    public void setUserId(int userId) {
        this.userId = userId;
    }

    
    @Column(name="LeaveType", nullable=false)
    public int getLeaveType() {
        return this.leaveType;
    }
    
    public void setLeaveType(int leaveType) {
        this.leaveType = leaveType;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ApplyDate", nullable=false, length=10)
    public Date getApplyDate() {
        return this.applyDate;
    }
    
    public void setApplyDate(Date applyDate) {
        this.applyDate = applyDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="StartDate", nullable=false, length=10)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="EndDate", nullable=false, length=10)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ApproveDate", length=10)
    public Date getApproveDate() {
        return this.approveDate;
    }
    
    public void setApproveDate(Date approveDate) {
        this.approveDate = approveDate;
    }

    
    @Column(name="NoOfDays", nullable=false, precision=12, scale=0)
    public float getNoOfDays() {
        return this.noOfDays;
    }
    
    public void setNoOfDays(float noOfDays) {
        this.noOfDays = noOfDays;
    }

    
    @Column(name="Reason", nullable=false, length=50)
    public String getReason() {
        return this.reason;
    }
    
    public void setReason(String reason) {
        this.reason = reason;
    }

    
    @Column(name="AddressDuringLeave", nullable=false, length=50)
    public String getAddressDuringLeave() {
        return this.addressDuringLeave;
    }
    
    public void setAddressDuringLeave(String addressDuringLeave) {
        this.addressDuringLeave = addressDuringLeave;
    }

    
    @Column(name="Remark", length=50)
    public String getRemark() {
        return this.remark;
    }
    
    public void setRemark(String remark) {
        this.remark = remark;
    }

    
    @Column(name="HodRemark", length=50)
    public String getHodRemark() {
        return this.hodRemark;
    }
    
    public void setHodRemark(String hodRemark) {
        this.hodRemark = hodRemark;
    }

    
    @Column(name="Status", nullable=false, length=20)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }


    public String getEmpName(){
        String empName = null;
        Session sess=HibernateUtil.getSessionFactory().openSession();
        sess.beginTransaction();
        Criteria cr=sess.createCriteria(Users.class);
        cr.add(Restrictions.eq("userId", userId));
        List<Users> l=cr.list();
        if(!l.isEmpty()){
            empName=(l.get(0)).getInitials();
        }
        return empName;
    }
    
    public String getLeaveShortName(){
        String leaveT = null;
        Session sess=HibernateUtil.getSessionFactory().openSession();
        sess.beginTransaction();
        Criteria cr=sess.createCriteria(LeaveInfo.class);
        cr.add(Restrictions.eq("lid", leaveType));
        List<LeaveInfo> l=cr.list();
        if(!l.isEmpty()){
            leaveT=(l.get(0)).getLeaveShortName();
        }
        return leaveT;
    }

}


